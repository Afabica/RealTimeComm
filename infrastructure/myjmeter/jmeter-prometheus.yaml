apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
 
    scrape_configs:
      - job_name: 'springboot-metrics'
        kubernetes_sd_configs: 
          - role: service 
            namespaces:
              names: 
                - https-test
        relabel_configs: 
          - source_labels: [__meta_kubernetes_service_name]
            target_label: job
        metrics_path: /metrics
        scheme: http
        static_configs: 
          - targets:
              - jmeter-master.https-test.svc.cluster.local:8000


---
# RBAC Configuration: Role and RoleBinding for Prometheus
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: https-test
  name: prometheus-scrape-role
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list"]
  - apiGroups: ["extensions"]
    resources: ["pods"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-scrape-rolebinding
  namespace: https-test
subjects:
  - kind: ServiceAccount
    name: default
    namespace: https-test
roleRef:
  kind: Role
  name: prometheus-scrape-role
  apiGroup: rbac.authorization.k8s.io

---
# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: default  # Reference the service account for RBAC
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
              readOnly: true
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config

---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
      nodePort: 30091

