use std::sync::Arc;
use actix_web::{web, App, HttpServer,HttpResponse, middleware::Logger}; 
use actix_web;
use crate::components::models::model_mongo::AppState;
use crate::components::services::database::{simple_registration, simple_authentication};
use sqlx::PgPool;   
use tokio::sync::Mutex;
use actix_service::IntoServiceFactory;

pub fn create_http_server(mongo_client: Arc<Mutex<mongodb::Client>>, pg_pool: PgPool) -> App<impl actix_web::dev::ServiceFactory> {
    App::new()
        .app_data(web::Data::new(AppState {
            mongo_client,
            pg_pool
        })) 
    .wrap(Logger::default())
    .route("/login", web::post().to(simple_authentication))
    .route("/registration", web::post().to(simple_registration))
}
