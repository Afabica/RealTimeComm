apiVersion: apps/v1
kind: Deployment
metadata:
  name: jmeter-master
  labels:
    jmeter_mode: master
spec:
  replicas: 1
  selector:
    matchLabels:
      jmeter_mode: master
  template:
    metadata:
      labels:
        jmeter_mode: master
    spec:
      containers:
      - name: jmmaster
        image: afabica234/jmeter-master:v8
        imagePullPolicy: Always
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "while true; do sleep 30; done;" ]  # Placeholder command to keep the pod running
        volumeMounts:
          - name: loadtest
            mountPath: /load_test
            subPath: "load_test"
        ports:
        - containerPort: 60000   # The port on which JMeter itself might listen (ensure JMeter is configured correctly)
        - containerPort: 8000    # Exposing Prometheus metrics endpoint
        - containerPort: 9270    # Exposing Prometheus metrics
      volumes:
      - name: loadtest 
        configMap:
         name: jmeter-load-test
---
apiVersion: v1
kind: Service
metadata:
  name: jmeter-master
  labels:
    jmeter_mode: master
spec:
  selector:
    jmeter_mode: master  # Matches the label in the Deployment
  ports:
    - name: spring-metrics
      protocol: TCP
      port: 8000           # Exposing Prometheus metrics on this port
      targetPort: 8000     # The internal port for Prometheus metrics
    - name: jmeter-metrics
      protocol: TCP
      port: 9270           # Prometheus metrics for JMeter backend
      targetPort: 9270     # The internal port for Prometheus metrics
  type: ClusterIP  # You can change to NodePort or LoadBalancer if required

